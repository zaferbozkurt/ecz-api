/*
 * WalmartItem
 * Walmart Item Module
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * Do not edit the class manually.
 */

import {expect} from 'chai';

import WalmartItemRequests from '../../src/api/WalmartItemRequests';
import WalmartItemEvents from '../../src/api/WalmartItemEvents';

describe('WalmartItemApi', function () {
  let requests;
  let events;
  beforeEach(function () {
    requests = new WalmartItemRequests({
      registerHandler() {
      },
      sendRequest() {
      },
    });
    events = new WalmartItemEvents({
      registerEventListener() {
      },
      emitEvent() {
      },
    });
  });

  describe('addItem', function () {
    it('should send request addItem successfully', () => {
      // uncomment below and update the code to test addItem
      //return requests.addItem(item: any).then(response => {
      //  if (error) throw error;
      //  expect(response).to.be();
      //});
    });
  });

  describe('addUser', function () {
    it('should send request addUser successfully', () => {
      // uncomment below and update the code to test addUser
      //return requests.addUser(item: any).then(response => {
      //  if (error) throw error;
      //  expect(response).to.be();
      //});
    });
  });

  describe('findItems', function () {
    it('should send request findItems successfully', () => {
      // uncomment below and update the code to test findItems
      //return requests.findItems(opts: any).then(response => {
      //  if (error) throw error;
      //  expect(response).to.be();
      //});
    });
  });

  describe('getUsers', function () {
    it('should send request getUsers successfully', () => {
      // uncomment below and update the code to test getUsers
      //return requests.getUsers(opts: any).then(response => {
      //  if (error) throw error;
      //  expect(response).to.be();
      //});
    });
  });

  describe('itemAdded', function () {
    it('should emit event itemAdded successfully', done => {
      // uncomment below and update the code to test itemAdded
      //events.addItemAddedEventListener(() => done());
      //events.emitItemAdded(itemId: string);
      done();
    });
  });
});
